//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWindowsService.JobsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/WcfJobsLibrary")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLevel {
            get {
                return this.MaxLevelField;
            }
            set {
                if ((this.MaxLevelField.Equals(value) != true)) {
                    this.MaxLevelField = value;
                    this.RaisePropertyChanged("MaxLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinLevel {
            get {
                return this.MinLevelField;
            }
            set {
                if ((this.MinLevelField.Equals(value) != true)) {
                    this.MinLevelField = value;
                    this.RaisePropertyChanged("MinLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobsServiceReference.IJobs")]
    public interface IJobs {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobs/GetJobs", ReplyAction="http://tempuri.org/IJobs/GetJobsResponse")]
        System.Data.DataSet GetJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobs/GetJobs", ReplyAction="http://tempuri.org/IJobs/GetJobsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobs/GetJobInfo", ReplyAction="http://tempuri.org/IJobs/GetJobInfoResponse")]
        TestWindowsService.JobsServiceReference.Job GetJobInfo(int jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobs/GetJobInfo", ReplyAction="http://tempuri.org/IJobs/GetJobInfoResponse")]
        System.Threading.Tasks.Task<TestWindowsService.JobsServiceReference.Job> GetJobInfoAsync(int jobID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobsChannel : TestWindowsService.JobsServiceReference.IJobs, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobsClient : System.ServiceModel.ClientBase<TestWindowsService.JobsServiceReference.IJobs>, TestWindowsService.JobsServiceReference.IJobs {
        
        public JobsClient() {
        }
        
        public JobsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetJobs() {
            return base.Channel.GetJobs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetJobsAsync() {
            return base.Channel.GetJobsAsync();
        }
        
        public TestWindowsService.JobsServiceReference.Job GetJobInfo(int jobID) {
            return base.Channel.GetJobInfo(jobID);
        }
        
        public System.Threading.Tasks.Task<TestWindowsService.JobsServiceReference.Job> GetJobInfoAsync(int jobID) {
            return base.Channel.GetJobInfoAsync(jobID);
        }
    }
}
